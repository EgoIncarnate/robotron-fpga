#
# Copyright 2009-2012 ShareBrained Technology, Inc.
#
# This file is part of robotron-fpga.
#
# robotron-fpga is free software: you can redistribute
# it and/or modify it under the terms of the GNU General
# Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your
# option) any later version.
#
# robotron-fpga is distributed in the hope that it will
# be useful, but WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General
# Public License along with robotron-fpga. If not, see
# <http://www.gnu.org/licenses/>.

#PACE: Start of Constraints generated by PACE
#PACE: Start of PACE I/O Pin Assignments

NET "*" IOSTANDARD = LVCMOS33;

# Clock signals
NET "CLK"			LOC = "B8";
#NET "FX2_CLKIN"		LOC = "B9";
#NET "FX2_CLKOUT"	LOC = "D9";
#NET "FX2_CLKIO"		LOC = "M9";

# FX2 I/O signals
NET "HALT_N"		LOC = "B4";
NET "NMI_N" 		LOC = "A4";
NET "TSC"    		LOC = "C3";
NET "IRQ_N"   		LOC = "C4";
NET "RESET_N"		LOC = "B6";
NET "FIRQ_N"		LOC = "D5";
NET "E"		        LOC = "C5";
NET "Q"     		LOC = "F7";

NET "LIC"   		LOC = "E7";
NET "AVMA"  		LOC = "A6";
NET "BUSY"  		LOC = "C7";
NET "BS"    		LOC = "F8";
NET "R_W_N"	    	LOC = "D7";
NET "BA"    		LOC = "E8";

NET "D<0>"	    	LOC = "E9";
NET "D<1>"	    	LOC = "C9";
NET "D<2>"	    	LOC = "A8";
NET "D<3>"	    	LOC = "G9";
NET "D<4>"	    	LOC = "F9";
NET "D<5>"	    	LOC = "D10";
NET "D<6>"	    	LOC = "A10";
NET "D<7>"    		LOC = "B10";
#NET "FX2_IO23"		LOC = "A11";
NET "A<0>"    		LOC = "D11";
#NET "FX2_IO25"		LOC = "E10";
NET "A<15>"   		LOC = "B11";
NET "A<1>"    		LOC = "C11";
NET "A<14>"   		LOC = "E11";
NET "A<2>"    		LOC = "F11";
NET "A<13>"   		LOC = "E12";
NET "A<3>"    		LOC = "F12";
NET "A<4>"    		LOC = "A13";
NET "A<5>"    		LOC = "B13";
NET "A<6>"    		LOC = "E13";
NET "A<7>"    		LOC = "A14";
NET "A<8>"    		LOC = "C14";
NET "A<9>"    		LOC = "D14";
NET "A<10>"   		LOC = "B14";
NET "A<11>"   		LOC = "A16";
NET "A<12>"   		LOC = "B16";

NET "SEG<0>"        LOC = "L18";
NET "SEG<1>"        LOC = "F18";
NET "SEG<2>"        LOC = "D17";
NET "SEG<3>"        LOC = "D16";
NET "SEG<4>"        LOC = "G14";
NET "SEG<5>"        LOC = "J17";
NET "SEG<6>"        LOC = "H14";
NET "DP"            LOC = "C17";
NET "AN<0>"         LOC = "F17";
NET "AN<1>"         LOC = "H17";
NET "AN<2>"         LOC = "C18";
NET "AN<3>"         LOC = "F15";

NET "LED<0>"        LOC = "J14";
NET "LED<1>"        LOC = "J15";
NET "LED<2>"        LOC = "K15";
NET "LED<3>"        LOC = "K14";
NET "LED<4>"        LOC = "E16";
NET "LED<5>"        LOC = "P16";
NET "LED<6>"        LOC = "E4";
NET "LED<7>"        LOC = "P4";

NET "SW<0>"         LOC = "G18";
NET "SW<1>"         LOC = "H18";
NET "SW<2>"         LOC = "K18";
NET "SW<3>"         LOC = "K17";
NET "SW<4>"         LOC = "L14";
NET "SW<5>"         LOC = "L13";
NET "SW<6>"         LOC = "N17";
NET "SW<7>"         LOC = "R17";

NET "BTN<0>"        LOC = "B18";
NET "BTN<1>"        LOC = "D18";
NET "BTN<2>"        LOC = "E18";
NET "BTN<3>"        LOC = "H13";

NET "MemOE" OFFSET = OUT 77.5 ns BEFORE "CLK";
NET "MemWR" OFFSET = OUT 78.5 ns BEFORE "CLK";
TIMEGRP "MemAdr" OFFSET = OUT 78.5 ns BEFORE "CLK";
TIMEGRP "MemDB" OFFSET = OUT 78 ns BEFORE "CLK";

NET "FlashCS" OFFSET = OUT 77.5 ns BEFORE "CLK";

NET "RamCS" OFFSET = OUT 77 ns BEFORE "CLK";
NET "RamLB" OFFSET = OUT 77.5 ns BEFORE "CLK";
NET "RamUB" OFFSET = OUT 77.5 ns BEFORE "CLK";

# onBoard Cellular RAM and StrataFlash
NET "MemOE"     LOC = "T2";
NET "MemWR"     LOC = "N7";
NET "RamAdv"    LOC = "J4";
NET "RamCS"     LOC = "R6";
NET "RamClk"    LOC = "H5";
NET "RamCRE"    LOC = "P7";
NET "RamLB"     LOC = "K5";
NET "RamUB"     LOC = "K4";
NET "RamWait"   LOC = "F5";
NET "FlashRp"    LOC = "T5";
NET "FlashCS"    LOC = "R5";
NET "FlashStSts" LOC = "D3";
NET "MemAdr<1>"  LOC = "J1";
NET "MemAdr<2>"  LOC = "J2";
NET "MemAdr<3>"  LOC = "H4";
NET "MemAdr<4>"  LOC = "H1";
NET "MemAdr<5>"  LOC = "H2";
NET "MemAdr<6>"  LOC = "J5";
NET "MemAdr<7>"  LOC = "H3";
NET "MemAdr<8>"  LOC = "H6";
NET "MemAdr<9>"  LOC = "F1";
NET "MemAdr<10>" LOC = "G3";
NET "MemAdr<11>" LOC = "G6";
NET "MemAdr<12>" LOC = "G5";
NET "MemAdr<13>" LOC = "G4";
NET "MemAdr<14>" LOC = "F2";
NET "MemAdr<15>" LOC = "E1";
NET "MemAdr<16>" LOC = "M5";
NET "MemAdr<17>" LOC = "E2";
NET "MemAdr<18>" LOC = "C2";
NET "MemAdr<19>" LOC = "C1";
NET "MemAdr<20>" LOC = "D2";
NET "MemAdr<21>" LOC = "K3";
NET "MemAdr<22>" LOC = "D1";
NET "MemAdr<23>" LOC = "K6";
NET "MemDB<0>"  LOC = "L1";
NET "MemDB<1>"  LOC = "L4";
NET "MemDB<2>"  LOC = "L6";
NET "MemDB<3>"  LOC = "M4";
NET "MemDB<4>"  LOC = "N5";
NET "MemDB<5>"  LOC = "P1";
NET "MemDB<6>"  LOC = "P2";
NET "MemDB<7>"  LOC = "R2";
NET "MemDB<8>"  LOC = "L3";
NET "MemDB<9>"  LOC = "L5";
NET "MemDB<10>" LOC = "M3";
NET "MemDB<11>" LOC = "M6";
NET "MemDB<12>" LOC = "L2";
NET "MemDB<13>" LOC = "N4";
NET "MemDB<14>" LOC = "R3";
NET "MemDB<15>" LOC = "T1";

# VGA Connector 
NET "vgaRed<0>"   LOC = "R9";
NET "vgaRed<1>"   LOC = "T8";
NET "vgaRed<2>"   LOC = "R8";
NET "vgaGreen<0>" LOC = "N8";
NET "vgaGreen<1>" LOC = "P8";
NET "vgaGreen<2>" LOC = "P6";
NET "vgaBlue<0>"  LOC = "U5";
NET "vgaBlue<1>"  LOC = "U4";
NET "Hsync" LOC = "T4";
NET "Vsync" LOC = "U3";

#PACE: Start of PACE Area Constraints
#PACE: Start of PACE Prohibit Constraints
#PACE: End of Constraints generated by PACE

#Created by Constraints Editor (xc3s1200e-fg320-4) - 2011/08/31
NET "CLK" TNM_NET = CLK;
TIMESPEC TS_CLK = PERIOD "CLK" 50 MHz HIGH 50%;

#Created by Constraints Editor (xc3s1200e-fg320-4) - 2012/08/28
INST "MemAdr<1>" TNM = MemAdr;
INST "MemAdr<2>" TNM = MemAdr;
INST "MemAdr<3>" TNM = MemAdr;
INST "MemAdr<4>" TNM = MemAdr;
INST "MemAdr<5>" TNM = MemAdr;
INST "MemAdr<6>" TNM = MemAdr;
INST "MemAdr<7>" TNM = MemAdr;
INST "MemAdr<8>" TNM = MemAdr;
INST "MemAdr<9>" TNM = MemAdr;
INST "MemAdr<10>" TNM = MemAdr;
INST "MemAdr<11>" TNM = MemAdr;
INST "MemAdr<12>" TNM = MemAdr;
INST "MemAdr<13>" TNM = MemAdr;
INST "MemAdr<14>" TNM = MemAdr;
INST "MemAdr<15>" TNM = MemAdr;
INST "MemAdr<16>" TNM = MemAdr;
INST "MemAdr<17>" TNM = MemAdr;
INST "MemAdr<18>" TNM = MemAdr;
INST "MemAdr<19>" TNM = MemAdr;
INST "MemAdr<20>" TNM = MemAdr;
INST "MemAdr<21>" TNM = MemAdr;
INST "MemAdr<22>" TNM = MemAdr;
INST "MemAdr<23>" TNM = MemAdr;
INST "MemDB<0>" TNM = MemDB;
INST "MemDB<1>" TNM = MemDB;
INST "MemDB<2>" TNM = MemDB;
INST "MemDB<3>" TNM = MemDB;
INST "MemDB<4>" TNM = MemDB;
INST "MemDB<5>" TNM = MemDB;
INST "MemDB<6>" TNM = MemDB;
INST "MemDB<7>" TNM = MemDB;
INST "MemDB<8>" TNM = MemDB;
INST "MemDB<9>" TNM = MemDB;
INST "MemDB<10>" TNM = MemDB;
INST "MemDB<11>" TNM = MemDB;
INST "MemDB<12>" TNM = MemDB;
INST "MemDB<13>" TNM = MemDB;
INST "MemDB<14>" TNM = MemDB;
INST "MemDB<15>" TNM = MemDB;
